#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
# 0.3.1
# Alexey Potehin <gnuplanet@gmail.com>, http://www.gnuplanet.ru/doc/cv
#
# $ mkdir -m 0700 ~/.config &> /dev/null;
# $ git clone git://github.com/progman/gitbash.git ~/.config/gitbash;
# $ echo "source ~/.config/gitbash/gitbash" >> ~/.bashrc;
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_url()
{
	if [ "$(which git)" != "" ] && [ "$(which grep)" != "" ] && [ "$(which sed)" != "" ];
	then
		BRANCH="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\*\ //g')";
		if [ "${BRANCH}" != "" ];
		then

			if [ "${1}" != "" ];
			then
				git remote remove origin &> /dev/null;
				git remote add origin "${1}";
			fi

#			echo "git config -l | grep remote.origin.url";
			URL=$(git config -l | grep remote.origin.url | sed -e 's/remote.origin.url=//g');
			if [ "${URL}" != "" ];
			then
				echo "git clone ${URL}";
				echo "";
			fi
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_pwd()
{
	if [ "$(which git)" != "" ] && [ "$(which head)" != "" ] && [ "$(which grep)" != "" ] && [ "$(which sed)" != "" ];
	then
		BRANCH="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\*\ //g')";
		if [ "${BRANCH}" != "" ];
		then

			CUR_DIR="${PWD}";

			COMMIT="$(git log 2> /dev/null | head -n 1 | grep commit)";

			while true;
			do
				DIR="${PWD}";
				cd ..;
				COMMIT_NEW="$(git log 2> /dev/null | head -n 1 | grep commit)";

				if [ "${COMMIT_NEW}" != "${COMMIT}" ];
				then
					echo "${DIR}";
					cd -- "${CUR_DIR}";
					break;
				fi
			done
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function get_git_branch()
{
	FLAG_COLOR='false';

	if [ "$(which git)" != "" ] && [ "$(which grep)" != "" ] && [ "$(which sed)" != "" ] && [ "$(which mktemp)" != "" ];
	then
		BRANCH="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\*\ //g')";
		if [ "${BRANCH}" != "" ];
		then
			TMP=$(mktemp);
			if [ "$(git status --porcelain --ignore-submodules 2>${TMP} | grep -v '^??' | grep -v '^AD' | wc -l)" != "0" ];
			then
				GIT_UNCOMMITED="(+)";
			fi
			if [ "${FLAG_COLOR}" != "false" ];
			then
				echo -en "\033[32m";
			fi
			if [ "$(cat ${TMP})" != "" ];
			then
				GIT_UNCOMMITED="(?)";
			fi
			echo -en "[${GIT_UNCOMMITED}git::${BRANCH}]";
			if [ "${FLAG_COLOR}" != "false" ];
			then
				echo -en "\033[0m";
			fi
			echo -en " ";
			rm -rf "${TMP}";
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_merge()
{
	if [ "${1}" == "" ];
	then
		echo "ERROR: missing branch name";
		return;
	fi
	echo "git merge --no-ff ${1} -m 'merge branch \"${1}\"'";
	git merge --no-ff ${1} -m "merge branch \"${1}\"";
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_pull()
{
	if [ "$(git_url)" == "" ];
	then
		echo "ERROR: remote repository is not set";
		return;
	fi

	if [ "$(which git)" != "" ] && [ "$(which grep)" != "" ] && [ "$(which sed)" != "" ];
	then
		BRANCH="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\*\ //g')";
		if [ "${BRANCH}" != "" ];
		then
			echo "git pull origin ${BRANCH}";
			git pull origin "${BRANCH}";
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_push()
{
	if [ "$(git_url)" == "" ];
	then
		echo "ERROR: remote repository is not set";
		return;
	fi

	if [ "$(which git)" != "" ] && [ "$(which grep)" != "" ] && [ "$(which sed)" != "" ];
	then
		BRANCH="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\*\ //g')";
		if [ "${BRANCH}" != "" ];
		then
			echo "git push origin ${BRANCH}";
			git push origin "${BRANCH}";
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function gitbash_update()
{
	CUR_PWD=${PWD};

	if [ -e ~/.config/gitbash ];
	then
		cd ~/.config/gitbash;
	fi

	if [ -e ~/.config/gitbash.git ];
	then
		cd ~/.config/gitbash.git;
	fi

	git_pull;
	cd "${CUR_PWD}";
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function gitbash_help()
{
	CUR_PWD=${PWD};

	if [ -e ~/.config/gitbash ];
	then
		cd ~/.config/gitbash;
	fi

	if [ -e ~/.config/gitbash.git ];
	then
		cd ~/.config/gitbash.git;
	fi

	cat README;
	cat HELP;
	cd "${CUR_PWD}";
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_commit()
{
	if [ "$(which git)" != "" ];
	then
		git status &> /dev/null;
		if [ "${?}" == "0" ];
		then
			if [ "${1}" == "" ];
			then
				echo "git commit -a -m 'update'";
				git commit -a -m 'update';
			else
				echo "git commit -a -m \"${1}\"";
				git commit -a -m "${1}";
			fi
		fi
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_sync()
{
	if [ "$(git_url)" == "" ];
	then
		echo "ERROR: remote repository is not set";
		return;
	fi

	if [ "$(which git)" != "" ];
	then
		git_pull;
		git_push;
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
function git_flush()
{
	if [ "$(which git)" != "" ];
	then
		git_commit "${1}";
		git_sync;
	fi
}
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
if [ "${USER}" == "root" ];
then
	export PS1='$(get_git_branch)\u@\h:\w# ';
else
	export PS1='$(get_git_branch)\u@\h:\w$ ';
fi
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
